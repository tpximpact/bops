<%= render(ReviewerCommentComponent.new(comment: @condition_set.current_review)) %>

<h2 class="govuk-heading-m govuk-!-margin-bottom-0">Add, edit and sort conditions</h2>

<hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
<ol id="conditions-list" class="govuk-list sortable-list" data-controller="sortable">
  <% @conditions.select(&:persisted?).sort_by(&:position).each do |condition| %>
    <%= render(Sortable::ListItemComponent.new(
          record: condition,
          record_class: "condition",
          record_controller: "conditions",
          record_sortable_url: planning_application_assessment_condition_position_path(@planning_application, condition),
          edit_record_url: edit_planning_application_assessment_condition_path(@planning_application, condition),
          remove_record_url: planning_application_assessment_condition_path(@planning_application, condition)
        )) %>
  <% end %>
</ol>

<p class="govuk-hint">
  Drag and drop conditions to change the order that they appear in the decision notice.
</p>

<%= govuk_details(summary_text: "Add condition",
      open: @conditions.count(&:persisted?).zero?,
      classes: "govuk-details--borderless") do %>
  <h3 class="govuk-heading-s">Add a new condition</h3>
  <%= render partial: "form", locals: {submit_button_is_secondary: true} %>
<% end %>

<%= form_with model: @condition_set, url: mark_as_complete_planning_application_assessment_conditions_path(@planning_application) do |form| %>
  <%= form.submit "Save and mark as complete", class: "govuk-button", data: {module: "govuk-button"} %>
  <%= govuk_button_link_to "Save and come back later", planning_application_assessment_tasks_path(@planning_application), secondary: true %>
  <%= govuk_button_link_to "Back", planning_application_assessment_tasks_path(@planning_application), secondary: true %>
<% end %>
