<% content_for :page_title do %>
  Add pre-commencement conditions - <%= t("page_title") %>
<% end %>

<%= render(
      partial: "shared/assessment_task_breadcrumbs",
      locals: {planning_application: @planning_application}
    ) %>

<% content_for :title, "Add pre-commencement conditions" %>

<%= render(
      partial: "shared/proposal_header",
      locals: {heading: "Add pre-commencement conditions"}
    ) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <%= render(
          AccordionComponent.new(
            planning_application: @planning_application,
            sections: %w[constraints considerations]
          )
        ) %>

    <%= render(ReviewerCommentComponent.new(comment: @condition_set.current_review)) %>
  </div>

  <div class="govuk-grid-column-full">
    <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
    <ol data-controller="sortable" id="conditions-list" class="govuk-list">
      <% @condition_set.conditions.each do |condition| %>
        <%= next unless condition.persisted? %>
        <%= content_tag :li,
              class: "sortable-list",
              id: dom_id(condition),
              data: {
                model_name: condition.class.name,
                sortable_url: planning_application_assessment_pre_commencement_condition_position_path(@planning_application, condition),
                sortable_handle: true
              } do %>

          <div class="sortable-container">
            <div>
              <span class="govuk-caption-m">Condition <%= condition.position %></span>
              <h2 class="govuk-heading-m"><%= condition.title %></h2>

              <p style="float: none">
                <%= render(StatusTags::BaseComponent.new(status: status(condition))) %>
              </p>

              <% if current_request = condition.current_validation_request %>
                <% if current_request.rejection_reason %>
                  <div class="govuk-inset-text applicant">
                    <p class="govuk-body">
                      <strong>Applicant comment</strong>
                    </p>
                    <p class="govuk-body govuk-hint">
                      Sent on: <%= current_request.updated_at.to_fs %>
                    </p>
                    <p class="govuk-body">
                      <%= current_request.rejection_reason %>
                    </p>
                  </div>
                <% end %>
              <% end %>

              <p class="govuk-body govuk-hint">
                <% if current_request.notified_at %>
                  Sent on <%= current_request.notified_at.to_fs %>
                <% end %>
              </p>

              <div>
                <p class="govuk-body">
                  <strong>Condition</strong><%= render(FormattedContentComponent.new(text: condition.text, classname: "scrollable")) %>
                </p>
                <p class="govuk-body">
                  <strong>Reason</strong><%= render(FormattedContentComponent.new(text: condition.reason, classname: "scrollable")) %>
                </p>
              </div>

              <% unless current_request.cancelled? || current_request.open? %>
                <%= govuk_link_to "Update condition", edit_planning_application_assessment_pre_commencement_condition_path(@planning_application, condition) %>
              <% end %>

              <% if current_request.pending? %>
                <%= govuk_link_to(
                      "Remove",
                      planning_application_assessment_pre_commencement_condition_path(@planning_application, condition),
                      method: :delete,
                      data: {confirm: "Are you sure?"}
                    ) %>
              <% end %>

              <% if current_request.open? %>
                <%= govuk_link_to "Cancel", cancel_confirmation_planning_application_validation_validation_request_path(@planning_application, current_request) %>
              <% end %>
            </div>
            <div>
              <%= render "shared/sortable_svg" %>
            </div>
          </div>

          <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
        <% end %>
      <% end %>

      <p class="govuk-body"><%= t(".drag_and_drop") %></p>
    </ol>
  </div>

  <div class="govuk-grid-column-two-thirds">
    <div class="govuk-!-margin-bottom-8">
      <details class="govuk-details" <%= "open" if @condition.errors.any? %>>
        <summary class="govuk-details__summary">
          <span class="govuk-details__summary-text">
            Add new pre-commencement condition
          </span>
        </summary>
        <div>
          <%= render "form", url: planning_application_assessment_pre_commencement_conditions_path(@planning_application) %>
        </div>
        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
      </details>
    </div>

    <% if @condition_set.validation_requests.any?(&:open?) %>
      <p class="govuk-body">Waiting for the applicant to respond to the requests.</p>
    <% end %>

    <div class="govuk-button-group">
      <%= form_with model: @condition, url: confirm_planning_application_assessment_pre_commencement_conditions_path(@planning_application) do |form| %>
        <% if @condition_set.validation_requests.all?(&:approved?) %>
          <% unless @condition_set.current_review&.complete? %>
            <%= form.submit "Save and mark as complete", class: "govuk-button" %>
          <% end %>
        <% elsif @condition_set.validation_requests.any?(&:pending?) %>
          <%= form.submit t("form_actions.pre_commencement_condition.confirm"), class: "govuk-button" %>
          <%= form.govuk_submit("Save and come back later", secondary: true) %>
        <% end %>
        <%= govuk_button_link_to("Back", planning_application_assessment_tasks_path(@planning_application), secondary: true) %>
      <% end %>
    </div>
  </div>
</div>
