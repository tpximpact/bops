<% content_for :page_title do %>
  Add pre-commencement conditions - <%= t("page_title") %>
<% end %>

<%= render(
      partial: "shared/assessment_task_breadcrumbs",
      locals: {planning_application: @planning_application}
    ) %>

<% content_for :title, "Add pre-commencement conditions" %>

<%= render(
      partial: "shared/proposal_header",
      locals: {heading: "Add pre-commencement conditions"}
    ) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= render(
          AccordionComponent.new(
            planning_application: @planning_application,
            sections: %w[constraints considerations]
          )
        ) %>

    <%= render(ReviewerCommentComponent.new(comment: @condition_set.current_review)) %>
  </div>

  <div class="govuk-grid-column-full">
    <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
    <ol data-controller="sortable" id="conditions-list" class="govuk-list sortable-list">
      <% @condition_set.not_cancelled_conditions.each do |condition| %>
        <%= next unless condition.persisted? %>

        <%= render(Sortable::ListItemComponent.new(
              record: condition,
              record_class: "condition",
              record_controller: "pre-commencement-conditions",
              record_sortable_url: planning_application_assessment_pre_commencement_condition_position_path(@planning_application, condition),
              edit_record_url: edit_planning_application_assessment_pre_commencement_condition_path(@planning_application, condition),
              remove_record_url: planning_application_assessment_pre_commencement_condition_path(@planning_application, condition),
              current_request: condition.current_validation_request
            )) %>
      <% end %>
    </ol>
    <p><%= t(".drag_and_drop") %></p>
  </div>

  <div class="govuk-grid-column-two-thirds">
    <div class="govuk-!-margin-bottom-8">
      <details class="govuk-details" <%= "open" if @condition.errors.any? %>>
        <summary class="govuk-details__summary">
          <span class="govuk-details__summary-text">
            Add new pre-commencement condition
          </span>
        </summary>
        <div>
          <%= render "form", url: planning_application_assessment_pre_commencement_conditions_path(@planning_application) %>
        </div>
        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
      </details>
    </div>

    <% if @condition_set.validation_requests.any?(&:open?) %>
      <p>Waiting for the applicant to respond to the requests.</p>
    <% end %>

    <div class="govuk-button-group">
      <%= form_with model: @condition, url: confirm_planning_application_assessment_pre_commencement_conditions_path(@planning_application) do |form| %>
        <% if @condition_set.validation_requests.all?(&:approved?) %>
          <% unless @condition_set.current_review&.complete? %>
            <%= form.submit "Save and mark as complete", class: "govuk-button" %>
          <% end %>
        <% elsif @condition_set.validation_requests.any?(&:pending?) %>
          <%= form.submit t("form_actions.pre_commencement_condition.confirm"), class: "govuk-button" %>
          <%= form.govuk_submit("Save and come back later", secondary: true) %>
        <% end %>
        <%= govuk_button_link_to("Back", planning_application_assessment_tasks_path(@planning_application), secondary: true) %>
      <% end %>
    </div>
  </div>
</div>
