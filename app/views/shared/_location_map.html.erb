<% record = @planning_application || @enforcement

   html_attributes = {
     style: "width: 100%; height: 600px;",
     osProxyEndpoint: main_app.os_proxy_url,
     showScale: true,
     useScaleBarStyle: true,
     showNorthArrow: true
   }

   if locals[:draw_geojson_data].present?
     html_attributes[:drawGeojsonData] = locals[:draw_geojson_data]["features"].first.to_json
     html_attributes[:drawGeojsonDataBuffer] = "12"
   end

   if locals[:geojson].present?
     html_attributes[:geojsonData] = locals[:geojson].to_json

     if locals[:invalid_red_line_boundary].present?
       html_attributes[:geojsonColor] = "#515151"
     end
   elsif record.lonlat
     html_attributes[:zoom] = "19"
     html_attributes[:latitude] = record.latitude
     html_attributes[:longitude] = record.longitude
   end

   if show_map_pin?(record, locals) || locals[:polygon_search]
     html_attributes[:showCentreMarker] = true
     html_attributes[:markerLatitude] = record.latitude
     html_attributes[:markerLongitude] = record.longitude
     html_attributes[:markerImage] = "circle"

     if record.respond_to?(:neighbour_boundary_geojson)
       if record&.neighbour_boundary_geojson && locals[:invalid_red_line_boundary].blank?
         html_attributes[:showGeojsonDataMarkers] = true
       end
     end
   end

   if locals[:geojson_field].present?
     html_attributes[:drawMode] = true
   end

   if @blank_layout
     html_attributes[:hideResetControl] = true
     html_attributes[:staticMode] = true
   end

   if locals[:polygon_search]
     html_attributes[:id] = "polygon-search-map"
     html_attributes[:drawMode] = true
     html_attributes[:geojsonBuffer] = 30
   end

   if locals[:geojson_color]
     html_attributes[:geojsonColor] = locals[:geojson_color]
   end

   if locals[:draw_color]
     html_attributes[:drawColor] = locals[:draw_color]
   end

   if locals[:draw_fill_color]
     html_attributes[:drawFillColor] = locals[:draw_fill_color]
   end

   concat(tag.my_map(**html_attributes)) %>

<%= javascript_tag nonce: true do %>
  <% if locals[:geojson_field].present? %>
    const map = document.querySelector("my-map");

    map.addEventListener("geojsonChange", ({ detail: geoJSON }) => {
      document.querySelector("[id^='<%= locals[:geojson_field] %>']").value = JSON.stringify(geoJSON["EPSG:3857"]);
    });
  <% end %>

  <% if locals[:in_accordion] == true %>
    const map = document.querySelector("my-map");
    const section = map.closest(".govuk-accordion__section");

    if (section) {
      const callback = (mutationList, observer) => {
        if (section.classList.contains("govuk-accordion__section--expanded")) {
          setTimeout(() => {
            map.shadowRoot.querySelector("button[title='Reset map view']").click();
          }, 100);
        }
      }

      const observer = new MutationObserver(callback);
      observer.observe(section, { attributes: true });
    }
  <% end %>
<% end %>
