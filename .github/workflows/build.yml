---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task:
          - brakeman
          - rubocop
          - biome
          - erblint
          - language_versions
      fail-fast: false
    env:
      BUNDLE_WITHOUT: development
      PUPPETEER_SKIP_DOWNLOAD: true
      RAILS_ENV: test

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
      - run: yarn install

      - name: Lint with ${{ matrix.task }}
        run: |
          bundle exec rake ${{ matrix.task }}

  specs:
    uses: ./.github/workflows/testing.yml
    strategy:
      matrix:
        specs:
          - { group: "models", pattern: "*_spec.rb" }
          - { group: "requests", pattern: "*_spec.rb", want_pdf: true }
          - { group: "system", pattern: "a[a-r]*_spec.rb", want_pdf: true }
          - { group: "system", pattern: "a[s-z]*_spec.rb", want_pdf: true }
          - { group: "system", pattern: "[b-c]*_spec.rb", want_pdf: true }
          - { group: "system", pattern: "[d-f]*_spec.rb", want_pdf: true }
          - { group: "system", pattern: "[g-k]*_spec.rb" }
          - { group: "system", pattern: "[l-n]*_spec.rb" }
          - { group: "system", pattern: "[o-p]*_spec.rb" }
          - { group: "system", pattern: "[q-r]*_spec.rb" }
          - { group: "system", pattern: "s[a-e]*_spec.rb" }
          - { group: "system", pattern: "s[f-z]*_spec.rb" }
          - { group: "system", pattern: "[t-z]*_spec.rb" }
          - {
              group: "other",
              pattern: "*_spec.rb",
              directories: "{components,controllers,form_models,helpers,presenters,mailer,jobs,services,translations}",
            }
          - { group: "bops_admin", pattern: "*_spec.rb", module: "engines" }
          - { group: "bops_api", pattern: "*_spec.rb", module: "engines" }
          - { group: "bops_config", pattern: "*_spec.rb", module: "engines" }
          - { group: "bops_core", pattern: "*_spec.rb", module: "engines" }
      fail-fast: false
    with:
      name: "${{matrix.specs.group}}: ${{matrix.specs.pattern }}"
      include: "${{matrix.specs.module || 'spec'}}/${{matrix.specs.directories || matrix.specs.group}}/**/${{matrix.specs.pattern}}"
      want-pdf: "${{ !!matrix.specs.want_pdf }}"
    secrets: inherit

  cucumber:
    uses: ./.github/workflows/testing.yml
    with:
      name: "all"
      test-runner: "cucumber"
      want-pdf: true
    secrets: inherit

  docker-dnsmasq:
    uses: ./.github/workflows/testing.yml
    with:
      name: "all"
      test-runner: "docker"
      dockerfile: docker/dnsmasq/Dockerfile
      context: docker/dnsmasq
    secrets: inherit

  docker-postgis:
    uses: ./.github/workflows/testing.yml
    with:
      name: "all"
      test-runner: "docker"
      dockerfile: docker/postgis/Dockerfile
      context: docker/postgis
    secrets: inherit

  docker-ruby:
    uses: ./.github/workflows/testing.yml
    with:
      name: "all"
      test-runner: "docker"
      dockerfile: docker/ruby/Dockerfile
      context: docker/ruby
    secrets: inherit

  docker-prod:
    uses: ./.github/workflows/testing.yml
    with:
      name: "all"
      test-runner: "docker"
      dockerfile: Dockerfile.production
    secrets: inherit
